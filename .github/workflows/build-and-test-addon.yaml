name: Build addon and run tests

on:
  push:
  pull_request:

jobs:
  build:
    name: Build addon
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - name: Fetch code
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # Skip MacOS, because:
      # [warning]Cache size of ~1247 MB (1307993580 B) is over the 400MB limit, not saving cache.
      - uses: actions/cache@v1
        if: runner.os != 'macOS'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --ignore-scripts

      - name: Build addon
        run: make build-addon

      - name: Create directory for addon file
        run: mkdir addon

      - name: Copy addon file
        run: cp fcrypto-*.node addon

      - name: Upload addon
        uses: actions/upload-artifact@v1
        with:
          name: addon-${{ matrix.os }}
          path: addon

  test:
    name: Test addon
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - name: Fetch code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        if: runner.os != 'macOS'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --ignore-scripts

      - name: Download addon
        uses: actions/download-artifact@v1
        with:
          name: addon-${{ matrix.os }}

      - name: Copy addon
        run: cp addon-${{ matrix.os }}/* .

      - name: Get minimal Node.js version from package.json
        id: node-version
        run: echo "::set-output name=version::$(node -p 'require(\"./package.json\").engines.node.match(/(\d.*)$/)[0]')"

      - name: Use Node.js ${{ steps.node-version.outputs.version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.node-version.outputs.version }}

      - name: Run tests for addon
        env:
          FCRYPTO_TEST_ONLY: addon
        run: make test-tap
