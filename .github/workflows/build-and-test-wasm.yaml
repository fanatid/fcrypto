name: Build WebAssembly and run tests

on:
  push:
  pull_request:

# This is shitty that we can not share steps for both jobs =\
jobs:
  build:
    name: Build WebAssembly files
    runs-on: ubuntu-latest
    steps:
      - name: Fetch code
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --ignore-scripts

      - name: Build WebAssembly files
        run: make build-wasm-ci

      - name: Copy WebAssembly files
        run: mkdir wasm-files && cp -r --parents fcrypto.wasm lib/wasm/wasm-bin-browser.js lib/wasm/wasm-glue.js wasm-files

      - name: Upload WebAssembly files
        uses: actions/upload-artifact@v1
        with:
          name: wasm-files
          path: wasm-files

  test:
    name: Test WebAssembly
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --ignore-scripts

      - name: Get minimal Node.js version from package.json
        id: node-version
        run: echo "::set-output name=version::$(node -p 'require("./package.json").engines.node.match(/(\d.*)$/)[0]')"

      - name: Use Node.js ${{ steps.node-version.outputs.version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.node-version.outputs.version }}

      - name: Download WebAssembly files
        uses: actions/download-artifact@v1
        with:
          name: wasm-files

      - name: Copy WebAssembly files
        run: cp -r wasm-files/* .

      - name: Run tests for WebAssembly
        env:
          FCRYPTO_TEST_ONLY: wasm
        run: make test-tap
