name: Build package

on:
  push:
    tags:
      - '*'
  release:

jobs:
  addon:
    name: Build addon
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - windows-latest
    steps:
      - name: Fetch code
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # Skip MacOS, because:
      # [warning]Cache size of ~1247 MB (1307993580 B) is over the 400MB limit, not saving cache.
      - uses: actions/cache@v1
        if: runner.os != 'macOS'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --ignore-scripts

      - name: Build addon
        run: make build-addon

      - name: Create directory for addon file
        run: mkdir addon

      - name: Copy addon file
        run: cp fcrypto-*.node addon

      - name: Upload addon
        uses: actions/upload-artifact@v1
        with:
          name: addon-${{ runner.os }}
          path: addon

  package:
    name: Build package
    needs: addon
    runs-on: ubuntu-latest
    steps:
      - name: Fetch code
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Get yarn cache directory
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --ignore-scripts

      - name: Download macOS addon
        uses: actions/download-artifact@v1
        with:
          name: addon-macOS

      - name: Download Windows addon
        uses: actions/download-artifact@v1
        with:
          name: addon-Windows

      - name: Copy addons
        run: cp addon-macOS/* . && cp addon-Windows/* .

      - name: Build Linux addon
        run: make build-addon

      - name: Build WebAssembly files
        run: make build-wasm-ci

      - name: Build package
        run: make package

      - name: Get package version from package.json
        id: pkg-version
        run: echo "::set-output name=version::$(node -p 'require("./package.json").version')"

      - name: Upload package
        uses: actions/upload-artifact@v1
        with:
          name: package
          path: fcrypto-${{ steps.pkg-version.outputs.version }}.tgz

      - name: Verify from NPM
        if: github.event_name == 'release'
        run: node util/package-verify.js -f fcrypto-${{ steps.pkg-version.outputs.version }}.tgz
